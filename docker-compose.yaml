version: '3'

services:

  gateway:
    image: traefik:latest
    container_name: restorio-gateway
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./restorio-gateway/traefic.yaml:/etc/traefik/traefik.yaml 
      - ./restorio-gateway/dynamic.yaml:/etc/traefik/dynamic.yaml
    
  auth:
    container_name: restorio-auth
    build: ./restorio-auth
    ports:
      - "8081:8081"
    volumes:
      - ./restorio-auth/logs:/var/log/restorio-auth
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SECRET_ACCESS: BcU8q58BtgWzIZ7KfjuQgf9YIEIbh8d/Y2EGPuh8Ui4=
      SECRET_REFRESH: cM4hNZ9z6uS49Q7Uo8Z7I0TvGYoJaCOhWwuY6U9D7QY=
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: 5432

  telegram:
    container_name: restorio-telegram
    build: ./restorio-telegram
    volumes:
      - ./restorio-telegram/logs:/var/log/restorio-telegram
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BOT_TOKEN: 8082597348:AAGnqiXFaY7z6MsJQOGb3Mk8TcFRCwNkWqA
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: 5432

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  frontend:
    container_name: restorio-frontend
    build:
      context: ./frontend/react_front
      dockerfile: Dockerfile
    volumes:
      - ./frontend/react_front:/app
      - /app/node_modules
    ports:
      - "3000:3000"  
      - "19000:19000"  
      - "19001:19001"  
    environment:
      - NODE_ENV=development
    command: npm start

  elasticsearch:
    container_name: elasticsearch
    build:
      context: restorio-logs/elasticsearch/
      dockerfile: Dockerfile
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: restorio-logs/logstash/
      dockerfile: Dockerfile
    volumes:
      - ./restorio-logs/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./restorio-logs/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - 5044:5044
      - 9600:9600
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    container_name: kibana
    build:
      context: restorio-logs/kibana/
      dockerfile: Dockerfile
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elk

  filebeat:
    container_name: filebeat
    build:
      context: restorio-logs/filebeat/
      dockerfile: Dockerfile
    volumes:
      - ./restorio-logs/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./restorio-auth/logs:/var/log/restorio-auth:ro
      - ./restorio-telegram/logs:/var/log/restorio-telegram:ro
    depends_on:
      - logstash
    networks:
      - elk

volumes:
  es-data:
    driver: local

  postgres_data:

networks:
  elk:
    driver: bridge

